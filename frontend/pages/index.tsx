import { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { AxiosResponse } from 'axios'
import { fetchArticles, fetchCategories } from '@/http'
import { ICategory,ICollectionResponse,IArticle, IPagination, IQueryoptions } from '@/types'
import Tabs from '@/components/Tabs'
import ArticleList from '@/components/ArticleList'
import qs from 'qs'
import Pagination from '@/components/Pagination'
import { useRouter } from 'next/router'
import { debounce } from '@/utils'


interface IPropTypes{

  categories:{
    items:ICategory[];
  };

  articles:{
    items:IArticle[];
    pagination:IPagination;
  }

}

const Home:NextPage<IPropTypes> =  ({categories,articles}) => 
{
  
  const {page,pageCount} = articles.pagination;

  const router = useRouter();

  const handleSearch = (query:string)=>{
    router.push(`/?search=${query}`)
  }

  return(
  <>
    <Head>
      <title>Dushyant's Blog</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <Tabs categories={categories.items} handleOnSearch={debounce(handleSearch,500)}/>

    {/* Articles */}

    <ArticleList articles={articles.items} />

    <Pagination page={page} pageCount={pageCount}/>
  </>
  )
}


export const getServerSideProps:GetServerSideProps = async ({query}) => {
  //Categories
  const {data:categories}:AxiosResponse<ICollectionResponse<ICategory[]>> =  await fetchCategories();

  // Articles

  const options:Partial<IQueryoptions> ={
    populate:['author.avatar'],
    sort:['id:desc'],
    pagination:{
      page:query.page?+query.page : 1,
      pageSize:1
    }
  }

  //Search Functionality


  if(query.search)
  {
    options.filters = {
      Title:{
        $containsi:query.search
      }
    }
  }


  const queryString = qs.stringify(options)

  const {data:articles}:AxiosResponse<ICollectionResponse<IArticle[]>> = await fetchArticles(queryString);


  return {
    props:{
      categories:{
        items:categories.data
      },
      articles:{
        items:articles.data,
        pagination:articles.meta.pagination 
      }
    }
  }
}

export default Home