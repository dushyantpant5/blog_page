import React from 'react'
import { GetServerSideProps } from 'next'
import qs from 'qs'
import { Axios, AxiosResponse } from 'axios'
import { IArticle, ICollectionResponse } from '@/types'
import { fetchArticleBySlug } from '@/http'
import Head from 'next/head'
import Image from 'next/image'
import { formatDate } from '@/utils'

interface IPropType {
  article: IArticle;
  notFound?: boolean;
}

const Slug = ({ article, notFound = false }: IPropType) => {
  
  console.log(article)
  
  return <>

    <Head>
      <title>{article.attributes.Title} </title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <div className='my-12 grid lg:grid-cols-3 gap-12'>
      <div className='col-span-2' >
        <h1 className='text-3xl font-bold py-2' >{article.attributes.Title}</h1>
        <div className='flex items-center my-4'>
          <div className='rounded-lg overflow-hidden flex items-center justify-center mr-2'>
            <Image
              src={`http://127.0.0.1:1337${article.attributes.author.data.attributes.avatar.data.attributes.formats.thumbnail.url}`}
              height={40}
              width={40}
              alt='av'
            />
          </div>
          <span className='text-sm font-bold text-gray-600'>
            {article.attributes.author.data.attributes.firstname} {' '}
            {article.attributes.author.data.attributes.lastname}
            {' '} on {' '}
            <span className='text-gray-400'>{formatDate(article.attributes.createdAt)}</span>
          </span>
        </div>

        <div className='text-lg text-gray-600 leading-8'>
          <img className='w-full' src={`http://127.0.0.1:1337${article.attributes.Image.data.attributes.url}`} alt="Image Data" />
          {article.attributes.body}
        </div>

      </div>
      
      
      
      <div>Right</div>
    </div>

  </>
}

export const getServerSideProps: GetServerSideProps = async ({ query }) => {

  const queryString = qs.stringify({
    populate: ['author.avatar','Image'],
    filters: {
      Slug: {
        $eq: query.Slug
      }
    }
  })

  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> = await fetchArticleBySlug(queryString);

  if (articles.data.length === 0) {
    return {
      props: {
        notFound: true
      }
    }
  }

  return {
    props: {
      article: articles.data[0]
    }
  }

}

export default Slug